/*
 1) Объекты могут быть использованы для построения различных структур данных.
 Часто встречающаяся структура – список (не путайте с массивом).
 Список – связанный набор объектов, где первый объект содержит ссылку на второй, второй – на третий, и т.п.
 var list = { value: 1, rest: { value: 2, rest: { value: 3, rest: null } } };
 Списки удобны тем, что они могут делиться частью своей структуры.
 Например, можно сделать два списка,
 {value: 0, rest: list} и
 {value: -1, rest: list}, где list – это ссылка на ранее объявленную переменную.
 Это два независимых списка, при этом у них есть общая структура list,
 которая включает три последних элемента каждого из них.
 Кроме того, оригинальный список также сохраняет свои свойства как отдельный список из трёх элементов.

 -Напишите функцию arrayToList, которая строит такую структуру, получая в качестве аргумента [1, 2, 3],

 -а также функцию listToArray, которая создаёт массив из списка.

 -Также напишите вспомогательную функцию prepend,
 которая получает элемент и создаёт новый список,
 где этот элемент добавлен спереди к первоначальному списку,

 -и функцию nth, которая в качестве аргументов принимает список и число, а возвращает элемент
 на заданной позиции в списке, или же undefined в случае отсутствия такого элемента.
 */
'use strict';

var input = [1,2,-4,2,9,88,2,0]; //8 элементов

function reverseArray (inp)// inp = [];
{
    var result = [],k;
    for (var i=(inp.length)-1;i>-1;i--)
    {
        k = inp.length - (i+1);
        result [k] = inp[i];
    }
    return result;
}

function reverseArrayInPlace (inp)
{
    for (var i=0; i<inp.length;i++)
    {
        inp.splice( i, 0, inp.pop() );
    }
    return inp;
}

console.log ('Начальный массив', input);
console.log ('reverseArray', reverseArray(input));
console.log ('reverseArrayInPlace', reverseArrayInPlace(input));